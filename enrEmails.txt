import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from jinja2 import Template
from pprint import pprint
from time import sleep
import pandas as pd
from pprint import pprint


def getUsers(fileName):
    xl = pd.ExcelFile(fileName)
    df = xl.parse()
    df_dict = df.to_dict(orient='records')
    return df_dict



def sendMailToUsers(sender, instList, subject):
    # due to limitations on how many emails can be sent in an hour, 
    for institution in instList:

        # create email list from instList.
        emails = institution['Email'].split(',')
        # create you html template here.  Just place your html inbetween the """ """. Use an html online editor to get an idea of what
        # email will look like if necessary.
        body = Template('''
<html>
 <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
 <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>

        body {
            width: 70%;
        }

		a:link, a:visited { 
		    color:  #0d223f !important;
		    text-decoration: none;
		    cursor: auto;
		}

		a:link:active, a:visited:active { 
		    color: #FF5000 !important;
		}

		a.two:link, a.two:visited { 
		    color: #0B68C4 !important;
		    text-decoration: underline;
		    cursor: auto;
        }
        
		a.two:link:active, a.two:visited:active { 
		    color: #0B68C4 !important;
        }
        div {
            text-align-last: left
        }
        .fa:hover {
			opacity: 0.7;
        }
        .orangeT {
            color: #FE5000;
            font-family: calibri;
            font-size: 18px;
        }
        .navyT {
            color: #0d223f;
            font-family: calibri;
        }

        h1 {
            text-align: Left;
            color: #FF5000;
            margin-top: 20px;
        }

        p {
            text-align: Left;
        }

        h2 {
            color: #0d223f;
            text-align: Left;
        }

        h3 {
            text-align: Left;
            color: #0d223f;
            text-decoration: underline;

        }

        h4 {
            text-align: Left;
        }

        h5 {
            text-decoration: underline;
        }

        img {
            margin-left: auto;
            margin-right: auto;
            width:444px;
        }

        div {
            text-align: Left;
        }

        .no-more {
            text-decoration: underline;
        }


        </style>
    </head>
    <body>

<table>
<a href="https://www.clickswitch.com/">
<img style="border: 0; margin-bottom: 25px; margin-top: 20px; display: block;" src="cid:image1" width="600">
</a>
  </table>

        <div id="div-two">
            <h1><strong>Where is your ENR?</strong></h1>

            <p>Did you know you can electronically submit Social Security and other government payments using ClickSWITCH?</p>
       
            <p>If you are recieving this email, then your Financial Institution does not have the FREE ENR feature enabled in your ClickSWITCH portal.</p>
        
            <h2>What is the ENR Feature?</h2>
            <p>ENR is an abbreviation which stands for enrollment into the ACH network.</p>
            <p>ENR is a FREE feature that allows your staff to electronically submit Social Security and other government payments from your ClickSWITCH portal in a matter of minutes. Payments are sent to the FED via our 3rd party sender, Corporate One, and transferred to your Financial Institution.</p>

            <p>An ENR switch will be transferred to your FI in the same month as long as it is submitted at least 10 business days prior to the account holderâ€™s next scheduled payment date.</p>
            <h5><strong>Using ClickSWITCH's ENR Feature will Eliminate:</strong></h5>
            <p>- Calling Social Security and waiting on the phone</p>
            <p>- Filling out forms for your account holder</p>
            <p>- Sending them to the closest Social Security office</p>
            

            <h2>Don't want to use our 3rd party sender, Corporate One?</h2>
            <p>We can set it up where YOU can submit them yourself.</p>

            <p>After a switch is submitted through ClickSWITCH, we can send your FI a batch of correctly formatted Government switches via secure site, and your team can grab and submit them.</p>
</div>
<table width="100%" align="center">
    <tr>
        <td colspan="4" style="width:100%; height:5px; background-color:#0d223f"></td>
    </tr>

    <tr>   

        <td align="left">
                <div style="color:#0d223f;">
<td style="width: 20%">
</td>
<td width: 24%>
               <span>Please email our Account Management team at am@clickswitch.com to get this feature turned on for your Financial Institution!</span>
                </div>
</td>
        </td>    
</tr>


    <tr><td colspan="4" style="font-size:11px; background-color:#0d223f; color:#FFF;    text-align:center; padding: 5px; ">
        <span>244 1st Avenue North, #100 &nbsp;|&nbsp; Minneapolis, MN 55401 &nbsp;|&nbsp; tel 866.410.6761 Option 2 </a></span>
    </td></tr>
</table>
        </div>


</body>
</html>
        ''')

        msg = MIMEMultipart()
        msg['From'] = sender
        msg['To'] = institution['Email']
        msg['Subject'] = subject

        # body.render() This is where you will feed your template any variables used inside the template.
        #(ex. html = body.render(services=user['services']))  user['services'] is a list of dictionaries
        html = body.render(institution=institution)
        # Create a MIME text object using the rendered html template
        HTML_BODY = MIMEText(html, 'html')

        
        msg.attach(HTML_BODY)

        # open file containing image.
        fp = open('App/Resources/static/images/ClickSWITCH Logo - Color.jpg', 'rb')
        msgImage = MIMEImage(fp.read(), _subtype="jpeg")
        fp.close()

        # define the image's ID referenced in the html template above.
        msgImage.add_header('Content-ID', '<image1>')
        msg.attach(msgImage)
        
        server = smtplib.SMTP('smtp-mail.outlook.com', 587)
        server.ehlo()
        server.starttls()
        server.ehlo()
        server.login('am@clickswitch.com','Jehova-18!')
        text = msg.as_string()
        try:
            print("sending Email")
            print(server.sendmail(sender, emails, text))
        except Exception as e:
            print("exception caught")
            print(e)
            sleep(120)
            server = smtplib.SMTP('smtp-mail.outlook.com', 587)
            server.ehlo()
            server.starttls()
            server.ehlo()
            server.login('am@clickswitch.com','Jehova-18!')
            print(server.sendmail(sender, emails,text))
        server.quit()

# getUsers('NewWeeklyNumbersTemplate.xlsx')
# use python arguments, use python main, extract the html to a seperate file and have the html file name be one of the arguments
# python unit tests
# Defensive Programming, verify spreadsheet contents
sendMailToUsers('am@clickswitch.com', getUsers('ENREmails.xlsx'), "Where is your ENR!?")